-- List of parents to delete children from
local parents = {
    workspace.Lamps, 
    workspace.NPCs, 
    workspace.VIPMine:GetChildren()[11], 
    workspace.VIPMine:GetChildren()[9], 
    workspace.VIPMine:GetChildren()[6], 
    workspace.VIPMine:GetChildren()[4], 
    workspace.VIPMine:GetChildren()[5], 
    workspace.VIPMine:GetChildren()[2], 
    workspace.VIPMine.Model, 
    workspace.VIPMine:GetChildren()[10], 
    workspace.VIPMine:GetChildren()[10], 
    workspace.VIPMine:GetChildren()[12], 
    workspace.VIPMine:GetChildren()[12], 
    workspace.VIPMine:GetChildren()[7], 
    workspace.VIPMine:GetChildren()[8], 
    workspace.VIPMine.Portal, 
    workspace.VIPMine:GetChildren()[3], 
    workspace.VIPMine:GetChildren()[13],
    workspace.Walls,
    workspace.VIPSign,
    workspace.VIPMine,
    workspace.TwitchSign,
    workspace.TrianglePluginDebris,
    workspace.TopRebirther3,
    workspace.TopRebirther2,
    workspace.TopRebirther1,
    workspace.TopMiners,
    workspace.TopMiner3,
    workspace.TopMiner2,
    workspace.TopMiner1,
    workspace.SpaceAdventure,
    workspace.Shop,
    workspace.RecordRebirther,
    workspace.RecordMiner,
    workspace.RankBoard,
    workspace.MostRebirth,
    workspace.DailyBoard,
    workspace.DailyRebirthBoard,
    workspace.TwitchSign,
    workspace.VIPMine,
    workspace.VIPSign,
    workspace.Walls,
    workspace.VIPWall,
    workspace.ToyPart,
    workspace.ShopStart,
    workspace.SpacePart,
    workspace.PrivateMinePart2,
    workspace.PrivateMinePart,
    workspace.Map.RootModel:GetChildren()[123],
    workspace.Map.RootModel.MeshPart,
    workspace.Map.RootModel.Fire,
    workspace.Map.RootModel:GetChildren()[126],
    workspace.Map.RootModel.Part,
    workspace.Map.RootModel:GetChildren()[95],
    workspace.Map.RootModel:GetChildren()[72],
    workspace.Map.RootModel:GetChildren()[124],
    workspace.Map.RootModel:GetChildren()[75],
    workspace.Map.RootModel:GetChildren()[120],
    workspace.Map.RootModel:GetChildren()[119],
    workspace.Map.RootModel:GetChildren()[117],
    workspace.Map.RootModel:GetChildren()[116],
    workspace.Map.RootModel:GetChildren()[115],
    workspace.Map.RootModel:GetChildren()[114],
    workspace.Map.RootModel:GetChildren()[113],
    workspace.Map.RootModel:GetChildren()[112],
    workspace.Map.RootModel:GetChildren()[111],
    workspace.Map.RootModel:GetChildren()[109],
    workspace.Map.RootModel:GetChildren()[110],
    workspace.Map.RootModel:GetChildren()[108],
    workspace.Map.RootModel:GetChildren()[107],
    workspace.Map.RootModel:GetChildren()[106],
    workspace.Map.RootModel:GetChildren()[105],
    workspace.Map.RootModel:GetChildren()[104],
    workspace.Map.RootModel:GetChildren()[103],
    workspace.Map.RootModel:GetChildren()[101],
    workspace.Map.RootModel:GetChildren()[102],
    workspace.Map.RootModel:GetChildren()[100],
    workspace.Map.RootModel:GetChildren()[99],
    workspace.Map.RootModel:GetChildren()[98],
    workspace.Map.RootModel:GetChildren()[97],
    workspace.Map.RootModel:GetChildren()[96],
    workspace.Map.RootModel:GetChildren()[125],
    workspace.Map.RootModel:GetChildren()[94],
    workspace.Map.RootModel:GetChildren()[93],
    workspace.Map.RootModel:GetChildren()[92],
    workspace.Map.RootModel:GetChildren()[91],
    workspace.Map.RootModel:GetChildren()[90],
    workspace.Map.RootModel:GetChildren()[89],
    workspace.Map.RootModel:GetChildren()[80],
    workspace.Map.RootModel:GetChildren()[87],
    workspace.Map.RootModel:GetChildren()[86],
    workspace.Map.RootModel:GetChildren()[85],
    workspace.Map.RootModel:GetChildren()[83],
    workspace.Map.RootModel:GetChildren()[82],
    workspace.Map.RootModel:GetChildren()[84],
    workspace.Map.RootModel:GetChildren()[78],
    workspace.Map.RootModel:GetChildren()[77],
    workspace.Map.RootModel.Wedge,
    workspace.Map.RootModel:GetChildren()[81],
    workspace.Map.RootModel:GetChildren()[74],
    workspace.Map.RootModel:GetChildren()[122],
    workspace.Map.RootModel:GetChildren()[118],
    workspace.Map.RootModel:GetChildren()[121],
    workspace.Map.RootModel:GetChildren()[65],
    workspace.Map.RootModel:GetChildren()[66],
    workspace.Map.RootModel:GetChildren()[67],
    workspace.Map.RootModel:GetChildren()[68],
    workspace.Map.RootModel:GetChildren()[69],
    workspace.Map.RootModel.Hill,
    workspace.Map.RootModel:GetChildren()[71],
    workspace.Map.RootModel:GetChildren()[70],
    workspace.Map.RootModel.Shop,
    workspace.Map.RootModel.NPCS,
    workspace.Map.RootModel:GetChildren()[49],
	workspace.Map.RootModel:GetChildren()[48],
	workspace.Map.RootModel:GetChildren()[43],
	workspace.Map.RootModel:GetChildren()[52],
	workspace.Map.RootModel:GetChildren()[54],
	workspace.Map.RootModel:GetChildren()[55],
	workspace.Map.RootModel:GetChildren()[56],
	workspace.Map.RootModel:GetChildren()[57],
	workspace.Map.RootModel:GetChildren()[58],
	workspace.Map.RootModel:GetChildren()[40],
	workspace.Map.RootModel:GetChildren()[65],
	workspace.Map.RootModel:GetChildren()[66],
	workspace.Map.RootModel:GetChildren()[67],
	workspace.Map.RootModel:GetChildren()[68],
	workspace.Map.RootModel:GetChildren()[69],
	workspace.Map.RootModel:GetChildren()[70],
	workspace.Map.RootModel:GetChildren()[71],
	workspace.Map.RootModel.Hill,
    workspace.Map.RootModel.BlackSmith,
	workspace.Map.RootModel:GetChildren()[45],
	workspace.Map.RootModel:GetChildren()[46],
	workspace.Map.RootModel:GetChildren()[47],
	workspace.Map.RootModel:GetChildren()[59],
	workspace.Map.RootModel:GetChildren()[51],
	workspace.Map.RootModel:GetChildren()[60],
    workspace.Map.RootModel:GetChildren()[53],
	workspace.Map.RootModel:GetChildren()[70],
	workspace.Map.RootModel.Hill,
	workspace.Map.RootModel:GetChildren()[71],
	workspace.Map.RootModel:GetChildren()[65],
	workspace.Map.RootModel:GetChildren()[66],
	workspace.Map.RootModel:GetChildren()[67],
	workspace.Map.RootModel:GetChildren()[68],
	workspace.Map.RootModel:GetChildren()[69],
    workspace:GetChildren()[48]:GetChildren()[6],
    workspace:GetChildren()[48]:GetChildren()[11],
    workspace.Map.CreditsBoard,
    workspace.Map.RootModel:GetChildren()[94],
    workspace.Map.RootModel:GetChildren()[123],
    workspace:GetChildren()[48]:GetChildren()[4],
	workspace.Map:GetChildren()[6].Tree,
	workspace.Map:GetChildren()[6]:GetChildren()[4],
    workspace:GetChildren()[48]:GetChildren()[5],
	workspace.Map.RootModel.Hill,
	workspace.Map.RootModel:GetChildren()[65],
	workspace.Map.RootModel:GetChildren()[66],
	workspace.Map.RootModel:GetChildren()[67],
	workspace.Map.RootModel:GetChildren()[68],
	workspace.Map.RootModel:GetChildren()[69],
	workspace.Map.RootModel:GetChildren()[70],
	workspace.Map.RootModel:GetChildren()[71],
    game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.SellFrame
}

-- Function to delete all children of a given parent
local function deleteChildren(parent)
    if parent and parent:IsA("Instance") then
        for _, child in ipairs(parent:GetChildren()) do
            child:Destroy()
        end
    end
end

-- Loop through each parent in the list and delete its children
for _, parent in ipairs(parents) do
    deleteChildren(parent)
end

-- Create a new part
local part = Instance.new("Part")
part.Size = Vector3.new(4, 1, 4)
part.Position = Vector3.new(41.96063995361328, 10.42, -1239.646484375)
part.Anchored = true
part.Transparency = 1
part.Parent = workspace
